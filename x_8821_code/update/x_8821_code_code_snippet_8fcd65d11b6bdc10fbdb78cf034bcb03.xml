<?xml version="1.0" encoding="UTF-8"?><record_update table="x_8821_code_code_snippet">
    <x_8821_code_code_snippet action="INSERT_OR_UPDATE">
        <applicable_in_application_files>ab9c69ae2f571c107e72821df699b658,7ecce1ee2f571c107e72821df699b64e,e0cc21ee2f571c107e72821df699b604</applicable_in_application_files>
        <applicable_in_context>server</applicable_in_context>
        <client_script/>
        <css/>
        <description>ServiceNow has never produced a way to convert ISO8601 date formats to ServiceNow standard Date/Time field values (even though "Schedule Date/Time" type fields are stored in ISO8601 format).  When you stumble on a scenario where this conversion needs to occur from ISO8601 format to ServiceNow Date/Time, please use the function below (captured from a Script Includes) in order to perform this operation successfully.</description>
        <jelly_script/>
        <link/>
        <name>How to Convert an ISO8601 Date to ServiceNow Date Format</name>
        <option_schema/>
        <sample_input>{
"isoDateTime":  "2020-09-28T10:03:25+00:00"
}</sample_input>
        <sample_output_client/>
        <sample_output_server>2020-09-28 10:03:25</sample_output_server>
        <server_script><![CDATA[convertISO8601ToStandardDateTime(isoDateTime);
function convertISO8601ToStandardDateTime(isoDateTime) {    
      
    if ((isoDateTime == '') || (isoDateTime == null) || (isoDateTime == '1800-01-01T00:00:00.000')) {  
        return null;  
    }  
  
    // GlideDateTime constructor expects date format: 'yyyy-MM-dd HH:mm:ss'  
    var parts = isoDateTime.split(/[-TZ:+]/g);  
    if (parts.length < 6) {  
        return null;  
    }  
  
    var dts = '';  
    dts += parts[0] + "-" + parts[1] + "-" + parts[2];  
    dts += ' ';  
    dts += parts[3] + ":" + parts[4] + ":" + parts[5];  
  
  
  
    // GlideDateTime object  
    var gdt = new GlideDateTime(dts);  
  
    //Calculate timezone offset - if supplied  
    if ((parts[6] != null) && (parts[7] != null)) {  
  
        //determine offset amount  
        var offsetTime = new GlideTime();  
        var tzOffset = parts[6] + ':' + parts[7] + ':00'; // hh:mm:ss  
        offsetTime.setValue(tzOffset);  
  
        //remove offset by addition or subtraction  
        var sign = /\d\d-\d\d:\d\d$/.test(isoDateTime)? '-' : '+';  
  
        //if sign is + then remove time to get us back to UTC  
        if (sign == '+') gdt.subtract(offsetTime);  
  
        //if sign is - then add time to get us back to UTC  
        else if (sign == '-') gdt.add(offsetTime);  
    }  
  
    return gdt.getValue();  

} ]]></server_script>
        <sys_class_name>x_8821_code_code_snippet</sys_class_name>
        <sys_created_by>alex.chansuthus@infocenter.io</sys_created_by>
        <sys_created_on>2020-09-28 12:04:26</sys_created_on>
        <sys_id>8fcd65d11b6bdc10fbdb78cf034bcb03</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>How to Convert an ISO8601 Date to ServiceNow Date Format</sys_name>
        <sys_package display_value="Code Search and Snip" source="x_8821_code">0f7b73c4dba433007d159235ca96197c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Code Search and Snip">0f7b73c4dba433007d159235ca96197c</sys_scope>
        <sys_update_name>x_8821_code_code_snippet_8fcd65d11b6bdc10fbdb78cf034bcb03</sys_update_name>
        <sys_updated_by>mike.cornell@infocenter.io</sys_updated_by>
        <sys_updated_on>2020-10-23 03:08:39</sys_updated_on>
        <template/>
    </x_8821_code_code_snippet>
</record_update>
