<?xml version="1.0" encoding="UTF-8"?><record_update table="x_8821_code_code_snippet">
    <x_8821_code_code_snippet action="INSERT_OR_UPDATE">
        <applicable_in_application_files>23aca9ae2f571c107e72821df699b6a7</applicable_in_application_files>
        <applicable_in_context>server</applicable_in_context>
        <client_script><![CDATA[// To make code snippet able to test "Sample Input":

// fnName(arg1, arg2, arg3);
// function fnName(arg1, arg2, arg3) {
    // Code to execute
    // return <result>;
// }]]></client_script>
        <css/>
        <description>Inbound email can be a bit tricky to parse with inbound actions â€“ particularly because there is no shared format or intake standard for all inbound ServiceNow emails.  It will differ from customer to customer and even from use case to use case.  &#13;
The snippet below contains a few of the most reliable ways to parse an inbound email using an inbound action.  Note that full context has been reduced in each example.&#13;
</description>
        <jelly_script/>
        <link/>
        <name>How to Identify Email Body Variables, Values and Attributes within Inbound Actions</name>
        <option_schema/>
        <sample_input>{&#13;
"arg1":  "val1",&#13;
"arg2":  "val2",&#13;
"arg3":  "val3"&#13;
// Add additional arguments as needed.&#13;
// Please delete these comments before executing.&#13;
}</sample_input>
        <sample_output_client/>
        <sample_output_server/>
        <server_script><![CDATA[// Example 1: //  
// Read Variables in Plain Text Email (the "Key" in Email Key/Value Pairs)  
var textBody = email.body;  
var textVariableValue = email.body.foo; // "foo" var is the key in a key/value or label/value pairing  


// Example 2: //  
// Convert HTML Email to Plain Text Email  
// Write conversion to the "email.body" object  
// Read Variables from Plain Text (the "Key" in Email Key/Value Pairs)  
var textBody = email.body_text;  
email.body = textBody;  
var textVariableValue = email.body.foo; // "foo" var is the key in a key/value or label/value pairing  


// Example 3: //  
// Convert HTML Email to XMLDocument  
// Look up HTML attribute information using the XMLDocument object pathfinder  
var htmlBody = email.body_html;  
var xmlDoc = new XMLDocument(htmlBody, true);  
var xmlDocElement = xmlDoc.getNodeText("//a");  
var xmlElementAttributeValue = xmlDoc.getNode("//a").getAttribute("href").toString();  
]]></server_script>
        <sys_class_name>x_8821_code_code_snippet</sys_class_name>
        <sys_created_by>alex.chansuthus@infocenter.io</sys_created_by>
        <sys_created_on>2020-09-29 20:16:56</sys_created_on>
        <sys_id>a13828711b2f1050fbdb78cf034bcbcf</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>How to Identify Email Body Variables, Values and Attributes within Inbound Actions</sys_name>
        <sys_package display_value="Code Search and Snip" source="x_8821_code">0f7b73c4dba433007d159235ca96197c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Code Search and Snip">0f7b73c4dba433007d159235ca96197c</sys_scope>
        <sys_update_name>x_8821_code_code_snippet_a13828711b2f1050fbdb78cf034bcbcf</sys_update_name>
        <sys_updated_by>mike.cornell@infocenter.io</sys_updated_by>
        <sys_updated_on>2020-10-23 03:09:25</sys_updated_on>
        <template/>
    </x_8821_code_code_snippet>
</record_update>
