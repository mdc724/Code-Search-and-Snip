<?xml version="1.0" encoding="UTF-8"?><record_update table="x_8821_code_code_snippet">
    <x_8821_code_code_snippet action="DELETE">
        <applicable_in_application_files>23aca9ae2f571c107e72821df699b6a7</applicable_in_application_files>
        <applicable_in_context>server</applicable_in_context>
        <client_script><![CDATA[// To make code snippet able to test "Sample Input":

// fnName(arg1, arg2, arg3);
// function fnName(arg1, arg2, arg3) {
    // Code to execute
    // return <result>;
// }]]></client_script>
        <css/>
        <description>Inbound email can be a bit tricky to parse with inbound actions – particularly because there is no shared format or intake standard for all inbound ServiceNow emails.  It will differ from customer to customer and even from use case to use case.  &#13;
The snippet below contains a few of the most reliable ways to parse an inbound email using an inbound action.  Note that full context has been reduced in each example.&#13;
</description>
        <jelly_script/>
        <link/>
        <name>How to Identify Email Body Variables, Values and Attributes within Inbound Actions</name>
        <option_schema/>
        <sample_input>{&#13;
"arg1":  "val1",&#13;
"arg2":  "val2",&#13;
"arg3":  "val3"&#13;
// Add additional arguments as needed.&#13;
// Please delete these comments before executing.&#13;
}</sample_input>
        <sample_output_client/>
        <sample_output_server/>
        <server_script><![CDATA[// Example 1: //  
// Read Variables in Plain Text Email (the "Key" in Email Key/Value Pairs)  
var textBody = email.body;  
var textVariableValue = email.body.foo; // "foo" var is the key in a key/value or label/value pairing  


// Example 2: //  
// Convert HTML Email to Plain Text Email  
// Write conversion to the "email.body" object  
// Read Variables from Plain Text (the "Key" in Email Key/Value Pairs)  
var textBody = email.body_text;  
email.body = textBody;  
var textVariableValue = email.body.foo; // "foo" var is the key in a key/value or label/value pairing  


// Example 3: //  
// Convert HTML Email to XMLDocument  
// Look up HTML attribute information using the XMLDocument object pathfinder  
var htmlBody = email.body_html;  
var xmlDoc = new XMLDocument(htmlBody, true);  
var xmlDocElement = xmlDoc.getNodeText("//a");  
var xmlElementAttributeValue = xmlDoc.getNode("//a").getAttribute("href").toString();  
]]></server_script>
        <sys_class_name>x_8821_code_code_snippet</sys_class_name>
        <sys_created_by>alex.chansuthus@infocenter.io</sys_created_by>
        <sys_created_on>2020-09-29 20:16:56</sys_created_on>
        <sys_id>a13828711b2f1050fbdb78cf034bcbcf</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>How to Identify Email Body Variables, Values and Attributes within Inbound Actions</sys_name>
        <sys_package display_value="Code Search and Snip" source="x_8821_code">0f7b73c4dba433007d159235ca96197c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Code Search and Snip">0f7b73c4dba433007d159235ca96197c</sys_scope>
        <sys_update_name>x_8821_code_code_snippet_a13828711b2f1050fbdb78cf034bcbcf</sys_update_name>
        <sys_updated_by>mike.cornell@infocenter.io</sys_updated_by>
        <sys_updated_on>2020-10-23 03:09:25</sys_updated_on>
        <template/>
    </x_8821_code_code_snippet>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Code Search and Snip">0f7b73c4dba433007d159235ca96197c</application>
        <file_path/>
        <instance_id>bfd5826bdb455f400e785d00cf961982</instance_id>
        <instance_name>infocenter</instance_name>
        <name>x_8821_code_code_snippet_a13828711b2f1050fbdb78cf034bcbcf</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="x_8821_code_code_snippet"&gt;&lt;x_8821_code_code_snippet action="INSERT_OR_UPDATE"&gt;&lt;applicable_in_application_files&gt;23aca9ae2f571c107e72821df699b6a7&lt;/applicable_in_application_files&gt;&lt;applicable_in_context&gt;server&lt;/applicable_in_context&gt;&lt;client_script&gt;&lt;![CDATA[// To make code snippet able to test "Sample Input":

// fnName(arg1, arg2, arg3);
// function fnName(arg1, arg2, arg3) {
    // Code to execute
    // return &lt;result&gt;;
// }]]&gt;&lt;/client_script&gt;&lt;css/&gt;&lt;description&gt;Inbound email can be a bit tricky to parse with inbound actions – particularly because there is no shared format or intake standard for all inbound ServiceNow emails.  It will differ from customer to customer and even from use case to use case.  &amp;#13;
The snippet below contains a few of the most reliable ways to parse an inbound email using an inbound action.  Note that full context has been reduced in each example.&amp;#13;
&lt;/description&gt;&lt;jelly_script/&gt;&lt;link/&gt;&lt;name&gt;How to Identify Email Body Variables, Values and Attributes within Inbound Actions&lt;/name&gt;&lt;option_schema/&gt;&lt;sample_input&gt;{&amp;#13;
"arg1":  "val1",&amp;#13;
"arg2":  "val2",&amp;#13;
"arg3":  "val3"&amp;#13;
// Add additional arguments as needed.&amp;#13;
// Please delete these comments before executing.&amp;#13;
}&lt;/sample_input&gt;&lt;sample_output_client/&gt;&lt;sample_output_server/&gt;&lt;server_script&gt;&lt;![CDATA[// Example 1: //  
// Read Variables in Plain Text Email (the "Key" in Email Key/Value Pairs)  
var textBody = email.body;  
var textVariableValue = email.body.foo; // "foo" var is the key in a key/value or label/value pairing  


// Example 2: //  
// Convert HTML Email to Plain Text Email  
// Write conversion to the "email.body" object  
// Read Variables from Plain Text (the "Key" in Email Key/Value Pairs)  
var textBody = email.body_text;  
email.body = textBody;  
var textVariableValue = email.body.foo; // "foo" var is the key in a key/value or label/value pairing  


// Example 3: //  
// Convert HTML Email to XMLDocument  
// Look up HTML attribute information using the XMLDocument object pathfinder  
var htmlBody = email.body_html;  
var xmlDoc = new XMLDocument(htmlBody, true);  
var xmlDocElement = xmlDoc.getNodeText("//a");  
var xmlElementAttributeValue = xmlDoc.getNode("//a").getAttribute("href").toString();  
]]&gt;&lt;/server_script&gt;&lt;sys_class_name&gt;x_8821_code_code_snippet&lt;/sys_class_name&gt;&lt;sys_created_by&gt;alex.chansuthus@infocenter.io&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-09-29 20:16:56&lt;/sys_created_on&gt;&lt;sys_id&gt;a13828711b2f1050fbdb78cf034bcbcf&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;How to Identify Email Body Variables, Values and Attributes within Inbound Actions&lt;/sys_name&gt;&lt;sys_package display_value="Code Search and Snip" source="x_8821_code"&gt;0f7b73c4dba433007d159235ca96197c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Code Search and Snip"&gt;0f7b73c4dba433007d159235ca96197c&lt;/sys_scope&gt;&lt;sys_update_name&gt;x_8821_code_code_snippet_a13828711b2f1050fbdb78cf034bcbcf&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;mike.cornell@infocenter.io&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-10-23 03:09:25&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;/x_8821_code_code_snippet&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1091140985</payload_hash>
        <record_name>How to Identify Email Body Variables, Values and Attributes within Inbound Actions</record_name>
        <reverted_from/>
        <source>35f59cef1b40e810476d85507e4bcb43</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>mike.cornell@infocenter.io</sys_created_by>
        <sys_created_on>2020-10-30 01:56:00</sys_created_on>
        <sys_id>2116d8231b80e810476d85507e4bcb25</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1757737ffaa0000001</sys_recorded_at>
        <sys_updated_by>mike.cornell@infocenter.io</sys_updated_by>
        <sys_updated_on>2020-10-30 01:56:00</sys_updated_on>
        <type>Code Snippet</type>
        <update_guid>d03938194bc06450919812341b79b258</update_guid>
        <update_guid_history>d03938194bc06450919812341b79b258:-1091140985</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Record deleted 10-29-2020 22:23:00">414c9c2b1b80e810476d85507e4bcb63</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>mike.cornell@infocenter.io</sys_created_by>
        <sys_created_on>2020-10-30 02:23:00</sys_created_on>
        <sys_db_object display_value="" name="x_8821_code_code_snippet">x_8821_code_code_snippet</sys_db_object>
        <sys_id>182a323420dd44d8834408087709f410</sys_id>
        <sys_metadata>a13828711b2f1050fbdb78cf034bcbcf</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>How to Identify Email Body Variables, Values and Attributes within Inbound Actions</sys_name>
        <sys_package display_value="Code Search and Snip" source="x_8821_code">0f7b73c4dba433007d159235ca96197c</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Code Search and Snip">0f7b73c4dba433007d159235ca96197c</sys_scope>
        <sys_scope_delete display_value="">2f952166b84d4492b77d2b80ba54eeb1</sys_scope_delete>
        <sys_update_name>x_8821_code_code_snippet_a13828711b2f1050fbdb78cf034bcbcf</sys_update_name>
        <sys_update_version display_value="x_8821_code_code_snippet_a13828711b2f1050fbdb78cf034bcbcf">2116d8231b80e810476d85507e4bcb25</sys_update_version>
        <sys_updated_by>mike.cornell@infocenter.io</sys_updated_by>
        <sys_updated_on>2020-10-30 02:23:00</sys_updated_on>
    </sys_metadata_delete>
</record_update>
